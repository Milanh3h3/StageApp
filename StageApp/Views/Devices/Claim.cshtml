@model StageApp.ViewModels.ClaimDevicesViewModel

@{
    ViewData["Title"] = "Claim Devices";
}
<h1>Claim Devices</h1>
<div class="container form-container">
    <div class="row">
        <div class="col-md-6 form-section">
            @if (!string.IsNullOrEmpty(ViewBag.Message))
            {
                <div class="alert alert-success">
                    @ViewBag.Message
                </div>
            }

            @if (ViewData.ModelState.Count > 0 && !ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <strong>Error:</strong> Please correct the errors below.
                </div>
            }

            <form asp-action="Claim" asp-controller="Devices" method="post">
                <p class="text-center">Note: You can claim multiple devices by entering their serial numbers, one per line. For recently claimed devices, it may take a few minutes for API requests against that device to succeed</p>
                <div class="form-group">
                    <label for="OrganizationId">Organization</label>
                    <select class="form-control" id="OrganizationId" name="OrganizationId" asp-items="Model.Organizations" onchange="updateNetworks(this.value)" required>
                        <option value="">Select an organization</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="NetworkId">Network</label>
                    <select class="form-control" id="NetworkId" name="NetworkId" asp-items="Model.Networks" required>
                        <option value="">Select a network</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="SerialNumbers">Serial Numbers</label>
                    <textarea class="form-control" id="SerialNumbers" name="SerialNumbers" rows="4" placeholder="Enter each serial number on a new line" required></textarea>
                    <small class="form-text text-muted">Enter each serial number on a new line.</small>
                </div>
                <button type="submit" class="btn btn-primary">Claim Devices</button>
            </form>
        </div>
        <div class="col-md-6 form-section">
            <h3>Bulk</h3>
            <p>Make sure the excel file looks like this: first column Serial Numbers, second column Network ID</p>
            <p>Note: multiple devices can be claimed in different networks. For longer files make sure to refresh the API Key before Confirming.</p>
            <form asp-action="ClaimBulk" asp-controller="Devices" method="post" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="ExcelFile">Upload Excel File</label>
                    <input type="file" class="form-control" id="ExcelFile" name="ExcelFile" accept=".xls,.xlsx" required />
                    <small class="form-text text-muted">Allowed file types: .xls, .xlsx</small>
                </div>
                <button type="submit" class="btn btn-primary">Confirm Bulk Claim</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    async function updateNetworks(organizationId) {
        const networkDropdown = document.getElementById('NetworkId');
        networkDropdown.innerHTML = '<option value="">Loading...</option>';

        try {
            const response = await fetch(`/Devices/GetNetworks?organizationId=${organizationId}`);
            const networks = await response.json();

            networkDropdown.innerHTML = '<option value="">Select a network</option>';
            networks.forEach(network => {
                const option = document.createElement('option');
                option.value = network.networkId;
                option.textContent = network.networkName;
                networkDropdown.appendChild(option);
            });
        } catch (error) {
            console.error('Error loading networks:', error);
        }
    }
</script>
